get:
  description: Returns the `Booking` that has been created earlier
  tags:
    - booking
  parameters:
    - name: state
      description: The state of the booking to fetch
      in: query
      required: true
      schema:
        type: string
        enum: [BOOKED, CANCELLED, PAID, UPDATEREQUESTED, UPDATED, STARTED, FINISHED]
  responses:
    '200':
      description: The bookings matching the query
      content:
        application/json:
          schema:
            type: array
            description: The bookings that matched the query (zero or more)
            minItems: 0
            items:
              $ref: '../components/schemas/booking.yaml'
    '400':
      description: Bad request (invalid query parameters)
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error.yaml'
    '401':
      description: Authorization error (invalid API key)
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error.yaml'
    default:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error.yaml'
  x-serverless-endpoint: echo~GET
post:
  description: Creates a new `Booking` for the TSP in **booked** state. The returned
    object will be a reference that is passed back & forth throughout the
    booking life cycle.
    The Booking may be modified in the response, e.g. location being
    adjusted for a more suitable pick-up location.
    In addition, the service may contain a **meta** attribute for arbitrary
    TSP metadata that the TSP needs later, and **token** attribute depicting
    how long the current state is valid.
  tags:
    - booking
  responses:
    '200':
      description: A new booking was succesfully created
      content:
        application/json:
          schema:
            $ref: '../components/schemas/booking.yaml'
    '400':
      description: Bad request (invalid body parameters)
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error.yaml'
    '401':
      description: Authorization error (invalid API key)
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error.yaml'
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '../components/schemas/error.yaml'
  requestBody:
    content:
      application/json:
        schema:
          $ref: '../components/schemas/new-booking.yaml'
    description: New `Booking` data
    required: true
  parameters: []
